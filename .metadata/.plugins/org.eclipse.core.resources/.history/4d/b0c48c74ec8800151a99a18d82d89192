import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.filechooser.FileNameExtensionFilter;

public class WeatherFrame extends JFrame {

	/** Menu that will allow the user to load in a data file */
	private FileMenuBar fileMenuBar;
	/** Panel containing the stations and variables that the user can select */
	private SelectionPanel selectionPanel;
	/** Panel containing text boxes that will output most of the data */
	private DataPanel dataPanel;
	/** A list of stations that there will be statistics available for */
	private StationInfoList stationInfoList;
	/** A list to be loaded in containing all the Mesonet variables */
	private DataInfoList dataInfoList;
	
	/**
	 * Constructor
	 * @throws IOException 
	 * @throws FileNotFoundException 
	 */
	public WeatherFrame() throws FileNotFoundException, IOException {
		//TODO: All of the frame properties are subject to change
		setSize(1000, 600);
		setResizable(true);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		//initialize all of the components
		fileMenuBar = new FileMenuBar();
		
		//TODO: create the stationInfoList and dataInfoList by reading the files
		stationInfoList = new StationInfoList("data/geoinfo.csv");
		dataInfoList = new DataInfoList("data/DataTranslation.csv");
		
		//pass the station and data info list to the constructor of selection panel
		selectionPanel = new SelectionPanel(stationInfoList, dataInfoList);
		dataPanel = new DataPanel();
		
		//TODO: Determine the layout of the components (subject to change)
		this.setJMenuBar(fileMenuBar);
		
		GridLayout layout = new GridLayout(1, 2);
		this.setLayout(layout);
		add(selectionPanel);
		add(dataPanel);
		
		
	
		//leave setVisible to the last 
		setVisible(true);
	}
}

/**
 * 
 * @author CS2334. Modified by: Will Booker, David Jones
 *         <P>
 *         Date: 2015-11-06 <BR>
 *         Project 4
 *         <P>
 *         This class represents a menu bar that can open a file and then
 *         populate a list of years according to how many there are in the
 *         Mesonet data file.
 */

// TODO: complete implementation
class FileMenuBar extends JMenuBar {

	/** The menu itself */
	private JMenu menu;
	/** The file opener menu item */
	private JMenuItem menuOpen;
	/** The exit program menu item */
	private JMenuItem menuExit;
	/** The file chooser that opens when menuOpen is clicked */
	private JFileChooser fileChooser;

	/**
	 * Constructor
	 */
	public FileMenuBar() {
		// TODO: set display properties

		// initialize fields
		menu = new JMenu("File");
		menuOpen = new JMenuItem("Open Data File");
		menuExit = new JMenuItem("Exit");
		fileChooser = new JFileChooser(new File("./data"));

		// configure fileChooser
		fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
		fileChooser.setFileFilter(new FileNameExtensionFilter("CSV Files", "csv"));

		// add action listeners to the menu items
		menuOpen.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				int returnValue = fileChooser.showOpenDialog(FileMenuBar.this);
				if (returnValue == 0) {
					// TODO If the user hits open, Load the selected file using JFileChooser
				}
				else if (returnValue == 1) {
					//don't do anything
				}
			}

		});

		menuExit.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});

		// add the menu items to the menu
		menu.add(menuOpen);
		menu.add(menuExit);

		this.add(menu);
	}
}
